{"ast":null,"code":"import { ADD_NEW_LIST, ADD_NEW_ITEM, DELETE_LIST, DELETE_LIST_VALUE, EDIT_LIST_VALUE } from \"../actionTypes\";\n\nconst reducer = (state, action) => {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case ADD_NEW_LIST:\n      {\n        const {\n          payload: {\n            data,\n            value\n          }\n        } = action;\n        return { ...state,\n          [data]: [value]\n        };\n      }\n\n    case ADD_NEW_ITEM:\n      {\n        const {\n          payload: {\n            data,\n            value\n          }\n        } = action;\n        return { ...state,\n          [data]: [...state[data], value]\n        };\n      }\n\n    case DELETE_LIST:\n      {\n        const {\n          payload: {\n            index\n          }\n        } = action;\n        const keys = Object.keys(state);\n        delete state[keys[index]];\n        return { ...state\n        };\n      }\n\n    case DELETE_LIST_VALUE:\n      {\n        const {\n          payload: {\n            key,\n            index\n          }\n        } = action;\n        const newList = state[key].filter((el, i) => i !== index);\n\n        if (newList.length === 0) {\n          delete state[key];\n          return { ...state\n          };\n        } else {\n          return { ...state,\n            [key]: [...newList]\n          };\n        }\n      }\n\n    case EDIT_LIST_VALUE:\n      {\n        const {\n          payload: {\n            key,\n            index,\n            value\n          }\n        } = action;\n        state[key][index] = value;\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer };","map":{"version":3,"sources":["/home/narek/Desktop/toodo/src/context/reducer/index.js"],"names":["ADD_NEW_LIST","ADD_NEW_ITEM","DELETE_LIST","DELETE_LIST_VALUE","EDIT_LIST_VALUE","reducer","state","action","type","payload","data","value","index","keys","Object","key","newList","filter","el","i","length"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,WAArC,EAAkDC,iBAAlD,EAAqEC,eAArE,QAA4F,gBAA5F;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;;AACA,UAAQC,IAAR;AACI,SAAKR,YAAL;AAAkB;AACd,cAAM;AAAES,UAAAA,OAAO,EAAE;AAACC,YAAAA,IAAD;AAAOC,YAAAA;AAAP;AAAX,YAA6BJ,MAAnC;AACA,eAAO,EACH,GAAGD,KADA;AAEH,WAACI,IAAD,GAAO,CAACC,KAAD;AAFJ,SAAP;AAIH;;AACD,SAAKV,YAAL;AAAmB;AACf,cAAM;AAAEQ,UAAAA,OAAO,EAAE;AAACC,YAAAA,IAAD;AAAOC,YAAAA;AAAP;AAAX,YAA6BJ,MAAnC;AACA,eAAO,EACH,GAAGD,KADA;AAEH,WAACI,IAAD,GAAO,CAAC,GAAGJ,KAAK,CAACI,IAAD,CAAT,EAAiBC,KAAjB;AAFJ,SAAP;AAIH;;AACD,SAAKT,WAAL;AAAkB;AACd,cAAM;AAAEO,UAAAA,OAAO,EAAG;AAACG,YAAAA;AAAD;AAAZ,YAAwBL,MAA9B;AACA,cAAMM,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYP,KAAZ,CAAb;AACA,eAAOA,KAAK,CAACO,IAAI,CAACD,KAAD,CAAL,CAAZ;AAEA,eAAO,EACH,GAAGN;AADA,SAAP;AAGH;;AACD,SAAKH,iBAAL;AAAwB;AACpB,cAAM;AAAEM,UAAAA,OAAO,EAAE;AAACM,YAAAA,GAAD;AAAMH,YAAAA;AAAN;AAAX,YAA4BL,MAAlC;AACA,cAAMS,OAAO,GAAGV,KAAK,CAACS,GAAD,CAAL,CAAWE,MAAX,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAWA,CAAC,KAAKP,KAAnC,CAAhB;;AACA,YAAGI,OAAO,CAACI,MAAR,KAAmB,CAAtB,EAAyB;AACrB,iBAAOd,KAAK,CAACS,GAAD,CAAZ;AACA,iBAAO,EACH,GAAGT;AADA,WAAP;AAGH,SALD,MAKM;AACF,iBAAO,EACH,GAAGA,KADA;AAEH,aAACS,GAAD,GAAO,CAAC,GAAGC,OAAJ;AAFJ,WAAP;AAIH;AACJ;;AACD,SAAKZ,eAAL;AAAsB;AAClB,cAAM;AAAEK,UAAAA,OAAO,EAAE;AAACM,YAAAA,GAAD;AAAMH,YAAAA,KAAN;AAAaD,YAAAA;AAAb;AAAX,YAAmCJ,MAAzC;AACAD,QAAAA,KAAK,CAACS,GAAD,CAAL,CAAWH,KAAX,IAAoBD,KAApB;AACA,eAAO,EACH,GAAGL;AADA,SAAP;AAGH;;AACD;AACI,aAAOA,KAAP;AA/CR;AAiDH,CAnDD;;AAqDA,SAASD,OAAT","sourcesContent":["import { ADD_NEW_LIST, ADD_NEW_ITEM, DELETE_LIST, DELETE_LIST_VALUE, EDIT_LIST_VALUE } from \"../actionTypes\";\n\nconst reducer = (state, action) => {\n    const { type } = action;\n    switch (type) {\n        case ADD_NEW_LIST:{\n            const { payload: {data, value} } = action;\n            return {\n                ...state,\n                [data]:[value]\n            }\n        }\n        case ADD_NEW_ITEM: {\n            const { payload: {data, value} } = action;\n            return {\n                ...state,\n                [data]:[...state[data], value]\n            }\n        }\n        case DELETE_LIST: {\n            const { payload : {index} } = action;\n            const keys = Object.keys(state);\n            delete state[keys[index]];\n\n            return {\n                ...state,\n            }\n        }\n        case DELETE_LIST_VALUE :{\n            const { payload: {key, index} } = action;\n            const newList = state[key].filter((el, i) => i !== index);\n            if(newList.length === 0) {\n                delete state[key];\n                return {\n                    ...state\n                }\n            }else {\n                return {\n                    ...state,\n                    [key]: [...newList]\n                }   \n            }\n        }\n        case EDIT_LIST_VALUE :{\n            const { payload: {key, index, value} } = action;\n            state[key][index] = value;\n            return {\n                ...state,\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport { reducer }\n"]},"metadata":{},"sourceType":"module"}